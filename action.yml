name: 'Actions AWS WebServer'
description: 'Provision and AWS infra to host a webserver'
inputs:
  action: 
    description: "Desire outcome: deploy or delete"
    required: false
    default: "deploy"
  name:
    description: Function name
    required: true
  arm:
    description: Run in ARM compute
    required: false
    default: "true"
  cpu: 
    description: ".25, .5, 1, 2, 4, 8, 16 in vCPU for more details (docs)[https://docs.aws.amazon.com/eks/latest/userguide/fargate-pod-configuration.html]"
    required: false
    default: "256"
  memory:
    description: ".5 to 120 in GB, for more details (docs)[https://docs.aws.amazon.com/eks/latest/userguide/fargate-pod-configuration.html]"
    required: false
    default: "512"
  env: 
    description: List of environment variables in YML format
    required: false
    default: |
      CREATE_BY: alonch/actions-aws-function-node
  docker-path:
    description: "Path to Dockerfile"
    required: false
    default: "./"
  permissions:
    description: "List of permissions following Github standard of service: read or write. In YML format"
    default: ""
  container-image:
    description: full container image name
    required: true
    default: "nginx:latest"
  public-path:
    description: "Public path to the container"
    required: false
    default: "public/"
  port:
    description: "Port to expose"
    required: false
    default: "80"
outputs: 
  url: 
    description: "Public accessiable URL"
    value: ${{ steps.pulumi.outputs.url }}
runs:
  using: "composite"
  steps:
    - name: create ecr registry
      run: |
        aws ecr create-repository \
        --repository-name ${{ inputs.name }}-${{ github.repository_id }} \
        --image-tag-mutability IMMUTABLE \
        --image-scanning-configuration scanOnPush=true
      continue-on-error: true
      shell: bash
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - uses: docker/build-push-action@v5
      with:
        platforms: linux/arm64
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.name }}-${{ github.repository_id }}:${{ github.sha }}-${{ github.run_attempt	}}
        context: ${{ github.workspace }}/${{ inputs.docker-path }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Destroy infrastructure
      if: ${{ inputs.action=='delete' }}
      shell: bash
      run: |
        sam build
        sam delete \
        --region us-east-1 \
        --stack-name ${{ inputs.name }}-${{ github.repository_id }}

    - name: Applying infrastructure ðŸš€
      if: ${{ inputs.action=='deploy' }}
      shell: bash
      run: |
        sam build
        sam deploy \
        --resolve-s3 true \
        --stack-name ${{ inputs.name }}-${{ github.repository_id }} \
        --capabilities CAPABILITY_IAM \
        --no-confirm-changeset \
        --no-fail-on-empty-changeset \
        --parameter-overrides \
        VPC="vpc-0cb5da4d69d6a8435" \
        SubnetA="subnet-008fe9233fbd5a2b8" \
        SubnetB="subnet-02ed2550abef68d3a" \
        Image="${{ steps.login-ecr.outputs.registry }}/${{ inputs.name }}-${{ github.repository_id }}:${{ github.sha }}-${{ github.run_attempt	}}" \
        ContainerPort=${{ inputs.port }} \
        LoadBalancerPort="443" \
        HealthCheckPath="/" \
        MinContainers="1" \
        MaxContainers="3" \
        AutoScalingTargetValue="90" \
        DomainName="gha.dev.realsense.ca" \
        DomainHostedZoneId="Z0674300MVO8RX9JHZFL"

    - name: upload files
      shell: bash
      run: |
        BUCKET=$(aws cloudformation \
          --region us-east-1 describe-stacks \
          --stack-name ${{ inputs.name }}-${{ github.repository_id }} \
          --query 'Stacks[0].Outputs[?OutputKey==`Bucket`].OutputValue' \
          --output text)
        aws s3 sync ${{ inputs.public-path }} s3://${BUCKET} --delete
      
        